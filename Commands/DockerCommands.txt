docker run -p 8888:8888 --name config-server --network springcloud config-server:v1

docker run -p 8761:8761 --name eureka-server --network springcloud eureka-server:v1

docker run -p 3306:3306 --name mysql-db --network springcloud -e MYSQL_ROOT_PASSWORD=Cristianr34l.. -e MYSQL_DATABASE=db_springboot_cloud -d mysql:8

docker run -p 5432:5432 --name postgres-db --network springcloud -e POSTGRES_PASSWORD=sasa -e POSTGRES_DB=db_springboot_cloud -d postgres:12-alpine

docker run -P --network springcloud products-service:v1

docker run -P --network springcloud users-service:v1

docker run -p 9100:9100 --network springcloud oauth-service:v1

docker run -p 8090:8090 --network springcloud zuul-server:v1

docker run -p 8002:8002 --network springcloud item-service:v1

docker run -p 8002:8002 -p 8005:8005 -p 8007:8007 --network springcloud item-service:v1

docker run -p 15672:15672 -p 5672:5672 --name rabbitmq --network springcloud -d rabbitmq:3.8.5-management-alpine

docker run -p 9411:9411 --name zipkin-server --network springcloud -e RABBIT_ADDRESSES=rabbitmq:5672 -e STORAGE_TYPE=mysql -e MYSQL_USER=zipkin -e MYSQL_PASS=zipkin -e MYSQL_HOST=mysql-db zipkin-server:v1


mvn clean package -DskipTests


Create image docker
docker build -t zuul-server:v1 .


si no se agrega --name, docker agrega un nombre para el contenedor

Eliminar docker compose:
docker-compose down -v

Eliminar todos los contenedores por ID:
docker rm $(docker ps -aq)

Ver imagenes Docker:
docker images

Eliminar imagen Docker:
docker rmi [NAME OR ID IMAGEN]

ingresar a terminal de imagen:
docker run -ti [IMAGEN_NAME]
